version: '3.8'

services:
  nginx:
    image: docker.1ms.run/library/nginx:alpine
    ports:
      - "30080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      #- qukaweb
      - qukaai
      - minio
    restart: unless-stopped
  qukaai:
    image: docker.io/holdno/quka:v0.1.0
    environment:
      QUKA_API_SERVICE_ADDRESS: ${QUKA_API_SERVICE_ADDRESS:-http://localhost:33033}
      QUKA_POSTGRES_HOST: postgres
      QUKA_POSTGRES_PORT: 5432
      QUKA_POSTGRES_USER: ${QUKA_POSTGRES_USER:-postgres}
      QUKA_POSTGRES_PASSWORD: ${QUKA_POSTGRES_PASSWORD:-postgres}
      QUKA_S3_ACCESS_KEY: ${QUKA_S3_ACCESS_KEY:-minioadmin}
      QUKA_S3_SECRET_KEY: ${QUKA_S3_SECRET_KEY:-minioadmin123}
      QUKA_S3_BUCKET: ${QUKA_S3_BUCKET:-quka-bucket}
      QUKA_S3_REGION: ${QUKA_S3_REGION:-fake}
      QUKA_S3_ENDPOINT: ${QUKA_S3_ENDPOINT:-http://minio:9000}
      QUKA_STATIC_DOMAIN: ${QUKA_STATIC_DOMAIN:-http://localhost}
      QUKA_ENCRYPT_KEY: ${QUKA_ENCRYPT_KEY:-quka-encrypt-key}
  # 权限初始化容器
  postgres:
    image: docker.1ms.run/pgvector/pgvector:pg17
    restart: always
    ports:
      - "35432:5432"
    environment:
      POSTGRES_USER: ${QUKA_POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${QUKA_POSTGRES_PASSWORD:-postgres}
    volumes:
      # 选项1：使用命名卷（推荐，避免权限问题）
      - postgres_data:/var/lib/postgresql/data
      # 选项2：使用主机目录挂载（如果你需要直接访问数据）
      # - ./data/postgres:/var/lib/postgresql/data
  # MinIO 权限初始化容器
  minio:
    image: quay.io/minio/minio:latest
    ports:
      - "39000:9000"
      - "39001:9001"
    environment:
      MINIO_ROOT_USER: ${QUKA_MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${QUKA_MINIO_ROOT_PASSWORD:-minioadmin123}
    volumes:
      # 选项1：使用命名卷（推荐）
      - minio_data:/mnt/data
      # 选项2：使用主机目录挂载
      # - ./data/minio:/data
    command: server /mnt/data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio-init:
    image: quay.io/minio/mc:latest
    depends_on:
      - minio
    environment:
      MINIO_ROOT_USER: ${QUKA_MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${QUKA_MINIO_ROOT_PASSWORD:-minioadmin123}
      MINIO_BUCKET: ${QUKA_MINIO_BUCKET:-quka-bucket}
    entrypoint: >
      /bin/sh -c "
      echo '⏳ 等待 MinIO 启动...';
      until /usr/bin/mc alias set minio http://minio:9000 $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD; do
        echo '   MinIO 还未就绪，等待中...';
        sleep 2;
      done;
      echo '✅ MinIO 已启动，开始初始化...';
      if /usr/bin/mc ls minio/$$MINIO_BUCKET >/dev/null 2>&1; then
        echo '✅ Bucket 已存在: '$$MINIO_BUCKET;
      else
        echo '📦 创建 bucket: '$$MINIO_BUCKET;
        /usr/bin/mc mb minio/$$MINIO_BUCKET;
        echo '✅ Bucket 创建成功: '$$MINIO_BUCKET;
      fi;
      echo '🎉 MinIO 初始化完成！';
      echo '   - Bucket: '$$MINIO_BUCKET;
      echo '   - Web UI: http://localhost:9001';
      echo '   - 用户名: '$$MINIO_ROOT_USER;
      exit 0;
      "

volumes:  
  # 如果你想指定命名卷的具体位置，可以使用以下配置：
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/.quka/postgres
  minio_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/.quka/minio 