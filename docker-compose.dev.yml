version: '3.8'

services:
  minio:
    image: quay.io/minio/minio:latest
    ports:
      - "9000:9000"  # S3 API端口
      - "9001:9001"  # Web管理界面端口
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    volumes:
      - minio_data:/mnt/data
    command: server /mnt/data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 自动创建 bucket 和初始化配置
  minio-init:
    image: quay.io/minio/mc:latest
    depends_on:
      - minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
      MINIO_BUCKET: ${MINIO_BUCKET:-quka-bucket}
    entrypoint: >
      /bin/sh -c "
      echo '⏳ 等待 MinIO 启动...';
      until /usr/bin/mc alias set minio http://minio:9000 $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD; do
        echo '   MinIO 还未就绪，等待中...';
        sleep 2;
      done;
      echo '✅ MinIO 已启动，开始初始化...';
      if /usr/bin/mc ls minio/$$MINIO_BUCKET >/dev/null 2>&1; then
        echo '✅ Bucket 已存在: '$$MINIO_BUCKET;
      else
        echo '📦 创建 bucket: '$$MINIO_BUCKET;
        /usr/bin/mc mb minio/$$MINIO_BUCKET;
        echo '✅ Bucket 创建成功: '$$MINIO_BUCKET;
      fi;
      echo '🎉 MinIO 初始化完成！';
      echo '   - Bucket: '$$MINIO_BUCKET;
      echo '   - Web UI: http://localhost:9001';
      echo '   - 用户名: '$$MINIO_ROOT_USER;
      exit 0;
      "

volumes:
  postgres_data:
  redis_data:
  minio_data: